/*
  =================== BUTTON COMPONENT ======================
 */
.btn {
  position: relative;
  padding: 1.5rem 4rem;
  font-size: 1.6rem;
  border-radius: 10rem;
  transition: all 150ms ease-out;
}
.btn::after {
  position: absolute;
  display: inline-block;
  border-radius: inherit;
  transition: all 300ms ease-out;
  top: 0;
  left: 0;
  content: "";
  height: 100%;
  width: 100%;
  z-index: -1;
}
.btn:hover, .btn:focus {
  transform: translateY(-0.3rem);
  box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.2);
}
.btn:hover::after, .btn:focus::after {
  transform: scaleX(1.5) scaleY(1.8);
  opacity: 0;
}
.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.2rem 1rem rgba(0, 0, 0, 0.2);
}
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  display: inline-block;
}
.btn--white {
  background-color: #FFF;
  color: #777;
}
.btn--white::after {
  background-color: #FFF;
}
.btn--animated {
  animation: appear 1.5s ease-in 0.5s;
  /* This property applies the values of 0% before the animation is played*/
  animation-fill-mode: backwards;
}

/*
  =================== HEADING COMPONENT ======================
 */
.header {
  position: relative;
  height: 90vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: center;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}
.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  height: 3.5rem;
}
.header__title-box {
  position: relative;
  top: 25%;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
}

.row {
  max-width: 114rem;
  background-color: gray;
  margin: 0 auto;
}
.row::after {
  content: "";
  display: table;
  clear: both;
}
.row:not(:last-of-type) {
  margin-bottom: 8rem;
}
.row [class^=col-] {
  float: left;
  background-color: #7ed56f;
}
.row [class^=col-]:not(:last-of-type) {
  margin-right: 6rem;
}
.row .col-1-of-2 {
  width: calc(calc(((100% - 1 * 6rem) / 2)) * 1 + calc(0 * 6rem));
}
.row .col-1-of-3 {
  width: calc(calc(((100% - 2 * 6rem) / 3)) * 1 + calc(0 * 6rem));
}
.row .col-2-of-3 {
  width: calc(calc(((100% - 2 * 6rem) / 3)) * 2 + calc(1 * 6rem));
}
.row .col-1-of-4 {
  width: calc(calc(((100% - 3 * 6rem) / 4)) * 1 + calc(0 * 6rem));
}
.row .col-2-of-4 {
  width: calc(calc(((100% - 3 * 6rem) / 4)) * 2 + calc(1 * 6rem));
}
.row .col-3-of-4 {
  width: calc(calc(((100% - 3 * 6rem) / 4)) * 3 + calc(2 * 6rem));
}
.row .col-1-of-5 {
  width: calc(calc(((100% - 4 * 6rem) / 5)) * 1 + calc(0 * 6rem));
}
.row .col-2-of-5 {
  width: calc(calc(((100% - 4 * 6rem) / 5)) * 2 + calc(1 * 6rem));
}
.row .col-3-of-5 {
  width: calc(calc(((100% - 4 * 6rem) / 5)) * 3 + calc(2 * 6rem));
}
.row .col-4-of-5 {
  width: calc(calc(((100% - 4 * 6rem) / 5)) * 4 + calc(3 * 6rem));
}
.row .col-1-of-6 {
  width: calc(calc(((100% - 5 * 6rem) / 6)) * 1 + calc(0 * 6rem));
}
.row .col-2-of-6 {
  width: calc(calc(((100% - 5 * 6rem) / 6)) * 2 + calc(1 * 6rem));
}
.row .col-3-of-6 {
  width: calc(calc(((100% - 5 * 6rem) / 6)) * 3 + calc(2 * 6rem));
}
.row .col-4-of-6 {
  width: calc(calc(((100% - 5 * 6rem) / 6)) * 4 + calc(3 * 6rem));
}
.row .col-5-of-6 {
  width: calc(calc(((100% - 5 * 6rem) / 6)) * 5 + calc(4 * 6rem));
}

/*
  =================== ANIMATIONS ======================
 */
@keyframes moveInLeft {
  0% {
    transform: translateX(-10rem);
    visibility: hidden;
    opacity: 0;
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    transform: translateX(0);
    visibility: visible;
    opacity: 1;
  }
}
@keyframes moveInRight {
  0% {
    transform: translateX(10rem);
    visibility: hidden;
    opacity: 0;
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    transform: translateX(0);
    visibility: visible;
    opacity: 1;
  }
}
@keyframes appear {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
/* Styles Reset */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
}

body {
  padding: 3rem;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1;
  color: #FFF;
}

/*
  =================== HEADING PRIMARY COMPONENT ======================
  This could also be a component...
 */
.heading-primary {
  color: #FFF;
  font-weight: 400;
  text-transform: uppercase;
  text-align: center;
}
.heading-primary--main {
  display: block;
  font-size: 6rem;
  margin-bottom: 2.5rem;
  letter-spacing: 2.5rem;
  animation-name: moveInLeft;
  animation-duration: 500ms;
  animation-timing-function: ease-out;
  /*
  animation-delay: 5s;
  animation-iteration-count: 3;
  */
}
.heading-primary--sub {
  display: block;
  font-size: 2rem;
  letter-spacing: 1.5rem;
  animation: moveInRight 500ms ease-out;
}

/*
 * This Application is following the 7 - 1 CSS Architecture
 * - Base: Basic CSS Resets and html and body styles
 * - Abstract: Code that is not output css, such as variables, mixins...
 * - Component: Reusable building blocks, there will be one file per
 *   component
 * - Layout: Global components that are going to build a common layout
 *   for every or most pages.
 * - Pages: Will be containers for components that will compose a page.
 * - Themes: For color themes (not included)
 * - Vendor: Third party css codes, such Bootstrap, Tailwind... (not included)
 */

/*# sourceMappingURL=main.css.map */
