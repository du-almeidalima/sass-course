@use '../abstract/variables' as vars;
@use '../abstract/mixins' as mixins;

.composition {
  position: relative;

  // CSS as JavaScript kinda bubbles the 'events', so when hovering
  // a child, the parent is also hovered.
  &:hover &__photo:not(:hover) {
    transform: scale(0.95);
  }

  &__photo {
    position: absolute;
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(vars.$black, .4);
    outline: 1rem solid transparent;
    outline-offset: 1rem;
    transition: transform 100ms ease-out, outline-color 300ms ease-in 100ms;

    @include mixins.respond(tab-port) {
      position: relative;
      float: left;
      width: calc(100% / 3);
    }

    &:hover {
      outline-color: vars.$green-light;
      transform: scale(1.1);
      box-shadow: 1rem 1.5rem 6rem rgba(vars.$black, .4);
      z-index: 4;
    }

    &--p1 {
      z-index: 1;

      @include mixins.respond(tab-port) {
        transform: scale(1.2);
      }
    }

    &--p2 {
      left: 40%;
      top: 5rem;
      z-index: 2;

      @include mixins.respond(tab-port) {
        left: 0;
        top: -1rem;
        transform: scale(1.3);
        z-index: 3;
      }
    }

    &--p3 {
      left: 15%;
      top: 12rem;
      z-index: 3;

      @include mixins.respond(tab-port) {
        left: 0;
        top: 1rem;
        transform: scale(1.1);
        z-index: 2;
      }
    }
  }
}
